// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CategoryTagList is rendered correctly to match the snapshot with preIcon 1`] = `
.emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex-flow: row wrap;
  -webkit-flex-flow: row wrap;
  -ms-flex-flow: row wrap;
  flex-flow: row wrap;
}

.emotion-0>* {
  margin-right: 0.7rem;
  margin-bottom: 0.7rem;
}

.emotion-2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  color: hsla(0, 0%, 40%);
}

.emotion-4 {
  padding: 0.2rem 1rem;
  font-size: 0.8em;
  color: white;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: hsla(212, 72%, 50%);
  -webkit-filter: drop-shadow(
        2px 2px 1px hsla(212, 72%, 80%)
      );
  filter: drop-shadow(
        2px 2px 1px hsla(212, 72%, 80%)
      );
  border-radius: 3px;
}

.emotion-4:hover {
  color: white;
  background-color: hsla(212, 72%, 60%);
}

.emotion-4:visited {
  color: white;
}

<ThemeProvider
  theme={
    Object {
      "color": Object {
        "blue": Object {
          "base": "hsla(212, 72%, 60%)",
          "dark": "hsla(212, 72%, 50%)",
          "dark2": "hsla(212, 72%, 40%)",
          "dark3": "hsla(212, 72%, 30%)",
          "dark4": "hsla(212, 72%, 20%)",
          "light": "hsla(212, 72%, 70%)",
          "light2": "hsla(212, 72%, 80%)",
          "light3": "hsla(212, 72%, 90%)",
        },
        "border": Object {
          "primary": "hsla(0, 0%, 50%)",
          "primaryLight": "hsla(0, 0%, 75%)",
        },
        "green": Object {
          "base": "hsla(148, 72%, 60%)",
          "dark": "hsla(148, 72%, 50%)",
          "dark2": "hsla(148, 72%, 40%)",
          "dark3": "hsla(148, 72%, 30%)",
          "dark4": "hsla(148, 72%, 20%)",
          "light": "hsla(148, 72%, 70%)",
          "light2": "hsla(148, 72%, 80%)",
          "light3": "hsla(148, 72%, 90%)",
        },
        "primary": "hsla(212, 72%, 60%)",
        "primaryDark": "hsla(212, 72%, 50%)",
        "primaryLight": "hsla(212, 72%, 70%)",
        "text": Object {
          "accent": "hsla(148, 72%, 50%)",
          "primary": "hsla(0, 0%, 15%)",
          "primaryLight": "hsla(0, 0%, 40%)",
          "secondary": "hsla(212, 72%, 40%)",
        },
        "yellow": Object {
          "base": "hsla(60, 72%, 60%)",
          "dark": "hsla(60, 72%, 50%)",
          "dark2": "hsla(60, 72%, 40%)",
          "dark3": "hsla(60, 72%, 30%)",
          "dark4": "hsla(60, 72%, 20%)",
          "light": "hsla(60, 72%, 70%)",
          "light2": "hsla(60, 72%, 80%)",
          "light3": "hsla(60, 72%, 90%)",
        },
      },
    }
  }
>
  <CategoryTagList
    tags={
      Array [
        "A",
        "B",
        "C",
        "DUPLICATE",
        "DUPLICATE",
      ]
    }
    withPreIcon={true}
  >
    <S-ComponentWrapperDiv>
      <div
        className="emotion-0 emotion-1"
      >
        <S-PreIconWrapperDiv>
          <div
            className="emotion-2 emotion-3"
          >
            <FontAwesomeIcon
              border={false}
              fixedWidth={false}
              flip={null}
              icon={
                Object {
                  "icon": Array [
                    640,
                    512,
                    Array [],
                    "f02c",
                    "M497.941 225.941L286.059 14.059A48 48 0 0 0 252.118 0H48C21.49 0 0 21.49 0 48v204.118a48 48 0 0 0 14.059 33.941l211.882 211.882c18.744 18.745 49.136 18.746 67.882 0l204.118-204.118c18.745-18.745 18.745-49.137 0-67.882zM112 160c-26.51 0-48-21.49-48-48s21.49-48 48-48 48 21.49 48 48-21.49 48-48 48zm513.941 133.823L421.823 497.941c-18.745 18.745-49.137 18.745-67.882 0l-.36-.36L527.64 323.522c16.999-16.999 26.36-39.6 26.36-63.64s-9.362-46.641-26.36-63.64L331.397 0h48.721a48 48 0 0 1 33.941 14.059l211.882 211.882c18.745 18.745 18.745 49.137 0 67.882z",
                  ],
                  "iconName": "tags",
                  "prefix": "fas",
                }
              }
              inverse={false}
              listItem={false}
              mask={null}
              pull={null}
              pulse={false}
              rotation={null}
              size={null}
              spin={false}
              swapOpacity={false}
              symbol={false}
              title=""
              transform={null}
            >
              <svg
                aria-hidden="true"
                className="svg-inline--fa fa-tags fa-w-20 "
                data-icon="tags"
                data-prefix="fas"
                focusable="false"
                role="img"
                style={Object {}}
                viewBox="0 0 640 512"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M497.941 225.941L286.059 14.059A48 48 0 0 0 252.118 0H48C21.49 0 0 21.49 0 48v204.118a48 48 0 0 0 14.059 33.941l211.882 211.882c18.744 18.745 49.136 18.746 67.882 0l204.118-204.118c18.745-18.745 18.745-49.137 0-67.882zM112 160c-26.51 0-48-21.49-48-48s21.49-48 48-48 48 21.49 48 48-21.49 48-48 48zm513.941 133.823L421.823 497.941c-18.745 18.745-49.137 18.745-67.882 0l-.36-.36L527.64 323.522c16.999-16.999 26.36-39.6 26.36-63.64s-9.362-46.641-26.36-63.64L331.397 0h48.721a48 48 0 0 1 33.941 14.059l211.882 211.882c18.745 18.745 18.745 49.137 0 67.882z"
                  fill="currentColor"
                  style={Object {}}
                />
              </svg>
            </FontAwesomeIcon>
          </div>
        </S-PreIconWrapperDiv>
        <CategoryTag
          key="A"
          name="A"
        >
          <Link
            href="/tags/A"
            passHref={true}
          >
            <Anchor
              href="/tags/A"
              onClick={[Function]}
              onMouseEnter={[Function]}
            >
              <a
                className="emotion-4 emotion-5"
                href="/tags/A"
                onClick={[Function]}
                onMouseEnter={[Function]}
              >
                A
              </a>
            </Anchor>
          </Link>
        </CategoryTag>
        <CategoryTag
          key="B"
          name="B"
        >
          <Link
            href="/tags/B"
            passHref={true}
          >
            <Anchor
              href="/tags/B"
              onClick={[Function]}
              onMouseEnter={[Function]}
            >
              <a
                className="emotion-4 emotion-5"
                href="/tags/B"
                onClick={[Function]}
                onMouseEnter={[Function]}
              >
                B
              </a>
            </Anchor>
          </Link>
        </CategoryTag>
        <CategoryTag
          key="C"
          name="C"
        >
          <Link
            href="/tags/C"
            passHref={true}
          >
            <Anchor
              href="/tags/C"
              onClick={[Function]}
              onMouseEnter={[Function]}
            >
              <a
                className="emotion-4 emotion-5"
                href="/tags/C"
                onClick={[Function]}
                onMouseEnter={[Function]}
              >
                C
              </a>
            </Anchor>
          </Link>
        </CategoryTag>
        <CategoryTag
          key="DUPLICATE"
          name="DUPLICATE"
        >
          <Link
            href="/tags/DUPLICATE"
            passHref={true}
          >
            <Anchor
              href="/tags/DUPLICATE"
              onClick={[Function]}
              onMouseEnter={[Function]}
            >
              <a
                className="emotion-4 emotion-5"
                href="/tags/DUPLICATE"
                onClick={[Function]}
                onMouseEnter={[Function]}
              >
                DUPLICATE
              </a>
            </Anchor>
          </Link>
        </CategoryTag>
      </div>
    </S-ComponentWrapperDiv>
  </CategoryTagList>
</ThemeProvider>
`;

exports[`CategoryTagList is rendered correctly to match the snapshot without preIcon (default) 1`] = `
.emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex-flow: row wrap;
  -webkit-flex-flow: row wrap;
  -ms-flex-flow: row wrap;
  flex-flow: row wrap;
}

.emotion-0>* {
  margin-right: 0.7rem;
  margin-bottom: 0.7rem;
}

.emotion-2 {
  padding: 0.2rem 1rem;
  font-size: 0.8em;
  color: white;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: hsla(212, 72%, 50%);
  -webkit-filter: drop-shadow(
        2px 2px 1px hsla(212, 72%, 80%)
      );
  filter: drop-shadow(
        2px 2px 1px hsla(212, 72%, 80%)
      );
  border-radius: 3px;
}

.emotion-2:hover {
  color: white;
  background-color: hsla(212, 72%, 60%);
}

.emotion-2:visited {
  color: white;
}

<ThemeProvider
  theme={
    Object {
      "color": Object {
        "blue": Object {
          "base": "hsla(212, 72%, 60%)",
          "dark": "hsla(212, 72%, 50%)",
          "dark2": "hsla(212, 72%, 40%)",
          "dark3": "hsla(212, 72%, 30%)",
          "dark4": "hsla(212, 72%, 20%)",
          "light": "hsla(212, 72%, 70%)",
          "light2": "hsla(212, 72%, 80%)",
          "light3": "hsla(212, 72%, 90%)",
        },
        "border": Object {
          "primary": "hsla(0, 0%, 50%)",
          "primaryLight": "hsla(0, 0%, 75%)",
        },
        "green": Object {
          "base": "hsla(148, 72%, 60%)",
          "dark": "hsla(148, 72%, 50%)",
          "dark2": "hsla(148, 72%, 40%)",
          "dark3": "hsla(148, 72%, 30%)",
          "dark4": "hsla(148, 72%, 20%)",
          "light": "hsla(148, 72%, 70%)",
          "light2": "hsla(148, 72%, 80%)",
          "light3": "hsla(148, 72%, 90%)",
        },
        "primary": "hsla(212, 72%, 60%)",
        "primaryDark": "hsla(212, 72%, 50%)",
        "primaryLight": "hsla(212, 72%, 70%)",
        "text": Object {
          "accent": "hsla(148, 72%, 50%)",
          "primary": "hsla(0, 0%, 15%)",
          "primaryLight": "hsla(0, 0%, 40%)",
          "secondary": "hsla(212, 72%, 40%)",
        },
        "yellow": Object {
          "base": "hsla(60, 72%, 60%)",
          "dark": "hsla(60, 72%, 50%)",
          "dark2": "hsla(60, 72%, 40%)",
          "dark3": "hsla(60, 72%, 30%)",
          "dark4": "hsla(60, 72%, 20%)",
          "light": "hsla(60, 72%, 70%)",
          "light2": "hsla(60, 72%, 80%)",
          "light3": "hsla(60, 72%, 90%)",
        },
      },
    }
  }
>
  <CategoryTagList
    tags={
      Array [
        "A",
        "B",
        "C",
        "DUPLICATE",
        "DUPLICATE",
      ]
    }
  >
    <S-ComponentWrapperDiv>
      <div
        className="emotion-0 emotion-1"
      >
        <CategoryTag
          key="A"
          name="A"
        >
          <Link
            href="/tags/A"
            passHref={true}
          >
            <Anchor
              href="/tags/A"
              onClick={[Function]}
              onMouseEnter={[Function]}
            >
              <a
                className="emotion-2 emotion-3"
                href="/tags/A"
                onClick={[Function]}
                onMouseEnter={[Function]}
              >
                A
              </a>
            </Anchor>
          </Link>
        </CategoryTag>
        <CategoryTag
          key="B"
          name="B"
        >
          <Link
            href="/tags/B"
            passHref={true}
          >
            <Anchor
              href="/tags/B"
              onClick={[Function]}
              onMouseEnter={[Function]}
            >
              <a
                className="emotion-2 emotion-3"
                href="/tags/B"
                onClick={[Function]}
                onMouseEnter={[Function]}
              >
                B
              </a>
            </Anchor>
          </Link>
        </CategoryTag>
        <CategoryTag
          key="C"
          name="C"
        >
          <Link
            href="/tags/C"
            passHref={true}
          >
            <Anchor
              href="/tags/C"
              onClick={[Function]}
              onMouseEnter={[Function]}
            >
              <a
                className="emotion-2 emotion-3"
                href="/tags/C"
                onClick={[Function]}
                onMouseEnter={[Function]}
              >
                C
              </a>
            </Anchor>
          </Link>
        </CategoryTag>
        <CategoryTag
          key="DUPLICATE"
          name="DUPLICATE"
        >
          <Link
            href="/tags/DUPLICATE"
            passHref={true}
          >
            <Anchor
              href="/tags/DUPLICATE"
              onClick={[Function]}
              onMouseEnter={[Function]}
            >
              <a
                className="emotion-2 emotion-3"
                href="/tags/DUPLICATE"
                onClick={[Function]}
                onMouseEnter={[Function]}
              >
                DUPLICATE
              </a>
            </Anchor>
          </Link>
        </CategoryTag>
      </div>
    </S-ComponentWrapperDiv>
  </CategoryTagList>
</ThemeProvider>
`;
